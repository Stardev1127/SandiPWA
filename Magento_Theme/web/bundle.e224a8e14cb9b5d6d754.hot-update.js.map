{"version":3,"sources":["webpack:///./src/app/component/Field/Field.component.js"],"names":["Field","props","min","max","value","onKeyEnterDown","handleChange","e","target","id","onChangeCheckbox","label","onClick","type","CHECKBOX_TYPE","renderCheckbox","RADIO_TYPE","renderRadioButton","NUMBER_TYPE","renderTypeNumber","TEXTAREA_TYPE","renderTextarea","PASSWORD_TYPE","renderTypePassword","SELECT_TYPE","renderSelectWithOptions","renderTypeText","validation","isRequired","includes","message","mix","hasError","renderLabel","renderInputOfType","renderMessage","Object","defineProperty","_Field","PropTypes","string","onChange","func","onFocus","onKeyPress","oneOfType","object","number","bool","arrayOf","checked","MixType"],"mappings":"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","file":"bundle.e224a8e14cb9b5d6d754.hot-update.js","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n/* eslint-disable jsx-a11y/control-has-associated-label, jsx-a11y/label-has-associated-control */\n// Disabled due bug in `renderCheckboxInput` function\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport FieldInput from 'Component/FieldInput';\nimport FieldSelect from 'Component/FieldSelect';\nimport FieldTextarea from 'Component/FieldTextarea';\nimport { MixType } from 'Type/Common';\n\nimport {\n    CHECKBOX_TYPE,\n    NUMBER_TYPE,\n    PASSWORD_TYPE,\n    RADIO_TYPE,\n    SELECT_TYPE,\n    TEXTAREA_TYPE\n} from './Field.config';\n\nimport './Field.style';\n\n/**\n * Input fields component\n * @class Field\n * @namespace Component/Field/Component\n */\nexport class Field extends PureComponent {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        handleChange: PropTypes.func.isRequired,\n        onChangeCheckbox: PropTypes.func.isRequired,\n        onFocus: PropTypes.func.isRequired,\n        onKeyPress: PropTypes.func.isRequired,\n        onKeyEnterDown: PropTypes.func.isRequired,\n        onClick: PropTypes.func.isRequired,\n        label: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n        message: PropTypes.string,\n        value: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n            PropTypes.bool\n        ]),\n        validation: PropTypes.arrayOf(PropTypes.string).isRequired,\n        checked: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.string\n        ]),\n        mix: MixType,\n        min: PropTypes.number,\n        max: PropTypes.number\n    };\n\n    static defaultProps = {\n        min: 1,\n        max: 99,\n        checked: false,\n        mix: {},\n        label: '',\n        value: null,\n        message: ''\n    };\n\n    renderTextarea() {\n        return (\n            <FieldTextarea\n              { ...this.props }\n            />\n        );\n    }\n\n    /**\n     * Render Type Text, default value is passed from parent\n     * handleToUpdate used to pass child data to parent\n     */\n    renderTypeText() {\n        return (\n            <FieldInput\n              { ...this.props }\n              type=\"text\"\n            />\n        );\n    }\n\n    renderTypePassword() {\n        return (\n            <FieldInput\n              { ...this.props }\n              type=\"password\"\n            />\n        );\n    }\n\n    renderTypeNumber() {\n        const {\n            min,\n            max,\n            value,\n            onKeyEnterDown,\n            handleChange\n        } = this.props;\n\n        return (\n            <>\n                <FieldInput\n                  { ...this.props }\n                  type=\"number\"\n                  readOnly\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onChange={ (e) => handleChange(e.target.value, false) }\n                  onKeyDown={ onKeyEnterDown }\n                />\n                <button\n                  disabled={ +value === max }\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={ () => handleChange(+value + 1) }\n                />\n                <button\n                  disabled={ +value === min }\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={ () => handleChange(+value - 1) }\n                />\n            </>\n        );\n    }\n\n    renderCheckbox() {\n        const {\n            id,\n            onChangeCheckbox\n        } = this.props;\n\n        return (\n            <>\n                <FieldInput\n                  { ...this.props }\n                  type=\"checkbox\"\n                  onChange={ onChangeCheckbox }\n                />\n                <label htmlFor={ id } />\n            </>\n        );\n    }\n\n    renderRadioButton() {\n        const {\n            id,\n            label,\n            onClick\n        } = this.props;\n\n        return (\n            <label htmlFor={ id }>\n                <FieldInput\n                  { ...this.props }\n                  type=\"radio\"\n                  onChange={ onClick }\n                />\n                <label htmlFor={ id } />\n                { label }\n            </label>\n        );\n    }\n\n    renderSelectWithOptions() {\n        return (\n            <FieldSelect\n              { ...this.props }\n            />\n        );\n    }\n\n    renderInputOfType(type) {\n        switch (type) {\n        case CHECKBOX_TYPE:\n            return this.renderCheckbox();\n        case RADIO_TYPE:\n            return this.renderRadioButton();\n        case NUMBER_TYPE:\n            return this.renderTypeNumber();\n        case TEXTAREA_TYPE:\n            return this.renderTextarea();\n        case PASSWORD_TYPE:\n            return this.renderTypePassword();\n        case SELECT_TYPE:\n            return this.renderSelectWithOptions();\n        default:\n            return this.renderTypeText();\n        }\n    }\n\n    renderLabel() {\n        const { id, label, validation } = this.props;\n        const isRequired = validation.includes('notEmpty');\n\n        if (!label) {\n            return null;\n        }\n\n        return (\n            <label\n              block=\"Field\"\n              elem=\"Label\"\n              mods={ { isRequired } }\n              htmlFor={ id }\n            >\n                { label }\n            </label>\n        );\n    }\n\n    renderMessage() {\n        const { message } = this.props;\n\n        if (!message) {\n            return null;\n        }\n\n        return (\n            <p block=\"Field\" elem=\"Message\">\n                { message }\n            </p>\n        );\n    }\n\n    render() {\n        const {\n            mix,\n            type,\n            message\n        } = this.props;\n\n        return (\n            <div\n              block=\"Field\"\n              mods={ { type, hasError: !!message } }\n              mix={ mix }\n            >\n                { this.renderLabel() }\n                { this.renderInputOfType(type) }\n                { this.renderMessage() }\n            </div>\n        );\n    }\n}\n\nexport default Field;\n"],"sourceRoot":""}