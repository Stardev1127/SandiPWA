{"version":3,"sources":["webpack:///./src/app/component/Field/Field.container.js"],"names":["FieldContainer","onChange","bind","handleChange","onChangeCheckbox","onFocus","onKeyPress","onKeyEnterDown","onClick","propsChecked","props","checked","state","type","value","CHECKBOX_TYPE","getInitialPropsValue","validationStatus","prevProps","prevValue","prevChecked","currentValue","currChecked","setState","NUMBER_TYPE","validation","id","refMap","formRef","current","inputNode","rule","find","validationConfig","validationRules","isValid","validate","event","validateField","target","onBlur","keyCode","ENTER_KEY_CODE","selectValue","select","shouldUpdate","isControlled","min","max","isValueNaN","Number","isNaN","parseInt","containerProps","containerFunctions","Object","defineProperty","_FieldContainer","PropTypes","bool","oneOfType","string","number","oneOf","TEXT_TYPE","TEXTAREA_TYPE","PASSWORD_TYPE","RADIO_TYPE","SELECT_TYPE","isRequired","func","arrayOf"],"mappings":"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","file":"bundle.de53e6c4b25993984c26.hot-update.js","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport validationConfig from 'Component/Form/Form.config';\n\nimport Field from './Field.component';\nimport {\n    CHECKBOX_TYPE,\n    ENTER_KEY_CODE,\n    NUMBER_TYPE,\n    PASSWORD_TYPE,\n    RADIO_TYPE,\n    SELECT_TYPE,\n    TEXT_TYPE,\n    TEXTAREA_TYPE\n} from './Field.config';\n\n/** @namespace Component/Field/Container */\nexport class FieldContainer extends PureComponent {\n    static propTypes = {\n        isControlled: PropTypes.bool,\n        checked: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.string\n        ]),\n        value: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n            PropTypes.bool\n        ]),\n        type: PropTypes.oneOf([\n            TEXT_TYPE,\n            NUMBER_TYPE,\n            TEXTAREA_TYPE,\n            PASSWORD_TYPE,\n            RADIO_TYPE,\n            CHECKBOX_TYPE,\n            SELECT_TYPE\n        ]).isRequired,\n        onChange: PropTypes.func,\n        onFocus: PropTypes.func,\n        onBlur: PropTypes.func,\n        onClick: PropTypes.func,\n        onKeyPress: PropTypes.func,\n        min: PropTypes.number,\n        max: PropTypes.number,\n        validation: PropTypes.arrayOf(PropTypes.string),\n        id: PropTypes.string,\n        formRef: PropTypes.func\n    };\n\n    static defaultProps = {\n        min: 1,\n        max: 99,\n        checked: false,\n        value: null,\n        onChange: () => {},\n        onFocus: () => {},\n        onBlur: () => {},\n        onClick: () => {},\n        onKeyPress: () => {},\n        formRef: () => {},\n        isControlled: false,\n        validation: [],\n        id: ''\n    };\n\n    containerFunctions = {\n        onChange: this.onChange.bind(this),\n        handleChange: this.handleChange.bind(this),\n        onChangeCheckbox: this.onChangeCheckbox.bind(this),\n        onFocus: this.onFocus.bind(this),\n        onKeyPress: this.onKeyPress.bind(this),\n        onKeyEnterDown: this.onKeyEnterDown.bind(this),\n        onClick: this.onClick.bind(this)\n    };\n\n    __construct(props) {\n        super.__construct(props);\n\n        const { checked } = props;\n        const value = this.getInitialPropsValue();\n\n        this.state = {\n            value,\n            checked,\n            validationStatus: null\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { value: prevValue, checked: prevChecked } = prevProps;\n        const { value: currentValue, checked: currChecked, type } = this.props;\n\n        if (prevValue !== currentValue) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({ value: currentValue });\n        }\n        if (type === CHECKBOX_TYPE && currChecked !== prevChecked) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({ checked: currChecked });\n        }\n    }\n\n    getInitialPropsValue() {\n        const { type, value } = this.props;\n\n        if (value) {\n            return value;\n        }\n\n        switch (type) {\n        case NUMBER_TYPE:\n            return 0;\n        case CHECKBOX_TYPE:\n            return false;\n        default:\n            return '';\n        }\n    }\n\n    containerProps = () => {\n        const {\n            checked: propsChecked\n        } = this.props;\n\n        const {\n            type,\n            checked,\n            value\n        } = this.state;\n\n        return {\n            checked: type === CHECKBOX_TYPE ? propsChecked : checked,\n            value\n        };\n    };\n\n    validateField() {\n        const {\n            validation, id, formRef: refMap\n        } = this.props;\n\n        if (validation && id && refMap && refMap.current) {\n            const { current: inputNode } = refMap;\n\n            const rule = validation.find((rule) => {\n                if (!validationConfig[rule]) {\n                    return false;\n                }\n                const validationRules = validationConfig[rule];\n                const isValid = validationRules.validate(inputNode, refMap);\n                return !isValid;\n            });\n\n            if (rule) {\n                return validationConfig[rule];\n            }\n        }\n\n        return {};\n    }\n\n    onChange(event) {\n        if (typeof event === 'string' || typeof event === 'number') {\n            return this.handleChange(event);\n        }\n\n        const isValid = this.validateField();\n\n        if (isValid.validate) {\n            this.setState({\n                validationStatus: 'hasError'\n            });\n        } else if (!isValid.validate) {\n            this.setState({\n                validationStatus: 'isValid'\n            });\n        }\n\n        return this.handleChange(event.target.value);\n    }\n\n    onChangeCheckbox(event) {\n        const { onChange } = this.props;\n        const { target: { checked, value } } = event;\n\n        if (onChange) {\n            onChange(value, checked);\n        }\n\n        this.setState({ checked });\n    }\n\n    onFocus(event) {\n        const { onFocus } = this.props;\n\n        if (onFocus) {\n            onFocus(event);\n        }\n    }\n\n    onBlur(event) {\n        const { onBlur } = this.props;\n\n        if (onBlur) {\n            onBlur(event);\n        }\n    }\n\n    onKeyPress(event) {\n        const { onKeyPress } = this.props;\n\n        if (onKeyPress) {\n            onKeyPress(event);\n        }\n    }\n\n    onKeyEnterDown(event) {\n        if (event.keyCode === ENTER_KEY_CODE) {\n            const value = event.target.value || 1;\n            this.handleChange(value);\n        }\n    }\n\n    onClick(event, selectValue = false) {\n        const { onClick } = this.props;\n\n        if (selectValue) {\n            event.target.select();\n        }\n        if (onClick) {\n            onClick(event);\n        }\n    }\n\n    handleChange(value, shouldUpdate = true) {\n        const {\n            isControlled,\n            onChange,\n            type,\n            min,\n            max\n        } = this.props;\n\n        switch (type) {\n        case NUMBER_TYPE:\n            const isValueNaN = Number.isNaN(parseInt(value, 10));\n            if (min > value || value > max || isValueNaN) {\n                break;\n            }\n            if (onChange && shouldUpdate) {\n                onChange(value);\n            }\n            if (!isControlled) {\n                this.setState({ value });\n            }\n            break;\n        default:\n            if (onChange) {\n                onChange(value);\n            }\n            if (!isControlled) {\n                this.setState({ value });\n            }\n        }\n    }\n\n    render() {\n        return (\n            <Field\n              { ...this.props }\n              { ...this.containerProps() }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default FieldContainer;\n"],"sourceRoot":""}