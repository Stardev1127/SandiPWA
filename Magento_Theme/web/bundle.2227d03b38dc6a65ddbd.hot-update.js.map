{"version":3,"sources":["webpack:///./src/app/component/Field/Field.container.js"],"names":["FieldContainer","onChange","bind","handleChange","onChangeCheckbox","onFocus","onKeyPress","onKeyEnterDown","onClick","propsChecked","props","checked","state","type","value","CHECKBOX_TYPE","getInitialPropsValue","prevProps","prevValue","prevChecked","currentValue","currChecked","setState","NUMBER_TYPE","validation","id","refMap","formRef","console","log","current","inputNode","rule","find","validationConfig","validationRules","isValid","validate","event","validateField","element","target","parentElement","classList","add","remove","onBlur","keyCode","ENTER_KEY_CODE","selectValue","select","shouldUpdate","isControlled","min","max","isValueNaN","Number","isNaN","parseInt","containerProps","containerFunctions","Object","defineProperty","_FieldContainer","PropTypes","bool","oneOfType","string","number","oneOf","TEXT_TYPE","TEXTAREA_TYPE","PASSWORD_TYPE","RADIO_TYPE","SELECT_TYPE","isRequired","func","arrayOf"],"mappings":"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","file":"bundle.2227d03b38dc6a65ddbd.hot-update.js","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport validationConfig from 'Component/Form/Form.config';\n\nimport Field from './Field.component';\nimport {\n    CHECKBOX_TYPE,\n    ENTER_KEY_CODE,\n    NUMBER_TYPE,\n    PASSWORD_TYPE,\n    RADIO_TYPE,\n    SELECT_TYPE,\n    TEXT_TYPE,\n    TEXTAREA_TYPE\n} from './Field.config';\n\n/** @namespace Component/Field/Container */\nexport class FieldContainer extends PureComponent {\n    static propTypes = {\n        isControlled: PropTypes.bool,\n        checked: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.string\n        ]),\n        value: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n            PropTypes.bool\n        ]),\n        type: PropTypes.oneOf([\n            TEXT_TYPE,\n            NUMBER_TYPE,\n            TEXTAREA_TYPE,\n            PASSWORD_TYPE,\n            RADIO_TYPE,\n            CHECKBOX_TYPE,\n            SELECT_TYPE\n        ]).isRequired,\n        onChange: PropTypes.func,\n        onFocus: PropTypes.func,\n        onBlur: PropTypes.func,\n        onClick: PropTypes.func,\n        onKeyPress: PropTypes.func,\n        min: PropTypes.number,\n        max: PropTypes.number,\n        validation: PropTypes.arrayOf(PropTypes.string),\n        id: PropTypes.string,\n        formRef: PropTypes.func.isRequired\n    };\n\n    static defaultProps = {\n        min: 1,\n        max: 99,\n        checked: false,\n        value: null,\n        onChange: () => {},\n        onFocus: () => {},\n        onBlur: () => {},\n        onClick: () => {},\n        onKeyPress: () => {},\n        isControlled: false,\n        validation: [],\n        id: ''\n    };\n\n    containerFunctions = {\n        onChange: this.onChange.bind(this),\n        handleChange: this.handleChange.bind(this),\n        onChangeCheckbox: this.onChangeCheckbox.bind(this),\n        onFocus: this.onFocus.bind(this),\n        onKeyPress: this.onKeyPress.bind(this),\n        onKeyEnterDown: this.onKeyEnterDown.bind(this),\n        onClick: this.onClick.bind(this)\n    };\n\n    __construct(props) {\n        super.__construct(props);\n\n        const { checked } = props;\n        const value = this.getInitialPropsValue();\n\n        this.state = {\n            value,\n            checked\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { value: prevValue, checked: prevChecked } = prevProps;\n        const { value: currentValue, checked: currChecked, type } = this.props;\n\n        if (prevValue !== currentValue) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({ value: currentValue });\n        }\n        if (type === CHECKBOX_TYPE && currChecked !== prevChecked) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({ checked: currChecked });\n        }\n    }\n\n    getInitialPropsValue() {\n        const { type, value } = this.props;\n\n        if (value) {\n            return value;\n        }\n\n        switch (type) {\n        case NUMBER_TYPE:\n            return 0;\n        case CHECKBOX_TYPE:\n            return false;\n        default:\n            return '';\n        }\n    }\n\n    containerProps = () => {\n        const {\n            checked: propsChecked\n        } = this.props;\n\n        const {\n            type,\n            checked,\n            value\n        } = this.state;\n\n        return {\n            checked: type === CHECKBOX_TYPE ? propsChecked : checked,\n            value\n        };\n    };\n\n    validateField() {\n        const {\n            validation, id, formRef: refMap\n        } = this.props;\n\n        console.log(validation, id, refMap);\n\n        if (validation && id && refMap && refMap.current) {\n            const { current: inputNode } = refMap;\n\n            const rule = validation.find((rule) => {\n                if (!validationConfig[rule]) {\n                    return false;\n                }\n                const validationRules = validationConfig[rule];\n                const isValid = validationRules.validate(inputNode, refMap);\n                return !isValid;\n            });\n\n            if (rule) {\n                return validationConfig[rule];\n            }\n        }\n\n        return {};\n    }\n\n    onChange(event) {\n        if (typeof event === 'string' || typeof event === 'number') {\n            return this.handleChange(event);\n        }\n\n        const isValid = this.validateField();\n        const element = event.target.parentElement;\n\n        if (isValid.validate) {\n            element.classList.add('Field_hasError');\n            element.classList.remove('Field_isValid');\n        } else if (!isValid.validate) {\n            element.classList.add('Field_isValid');\n            element.classList.remove('Field_hasError');\n        }\n\n        return this.handleChange(event.target.value);\n    }\n\n    onChangeCheckbox(event) {\n        const { onChange } = this.props;\n        const { target: { checked, value } } = event;\n\n        if (onChange) {\n            onChange(value, checked);\n        }\n\n        this.setState({ checked });\n    }\n\n    onFocus(event) {\n        const { onFocus } = this.props;\n\n        if (onFocus) {\n            onFocus(event);\n        }\n    }\n\n    onBlur(event) {\n        const { onBlur } = this.props;\n\n        if (onBlur) {\n            onBlur(event);\n        }\n    }\n\n    onKeyPress(event) {\n        const { onKeyPress } = this.props;\n\n        if (onKeyPress) {\n            onKeyPress(event);\n        }\n    }\n\n    onKeyEnterDown(event) {\n        if (event.keyCode === ENTER_KEY_CODE) {\n            const value = event.target.value || 1;\n            this.handleChange(value);\n        }\n    }\n\n    onClick(event, selectValue = false) {\n        const { onClick } = this.props;\n\n        if (selectValue) {\n            event.target.select();\n        }\n        if (onClick) {\n            onClick(event);\n        }\n    }\n\n    handleChange(value, shouldUpdate = true) {\n        const {\n            isControlled,\n            onChange,\n            type,\n            min,\n            max\n        } = this.props;\n\n        switch (type) {\n        case NUMBER_TYPE:\n            const isValueNaN = Number.isNaN(parseInt(value, 10));\n            if (min > value || value > max || isValueNaN) {\n                break;\n            }\n            if (onChange && shouldUpdate) {\n                onChange(value);\n            }\n            if (!isControlled) {\n                this.setState({ value });\n            }\n            break;\n        default:\n            if (onChange) {\n                onChange(value);\n            }\n            if (!isControlled) {\n                this.setState({ value });\n            }\n        }\n    }\n\n    render() {\n        return (\n            <Field\n              { ...this.props }\n              { ...this.containerProps() }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default FieldContainer;\n"],"sourceRoot":""}